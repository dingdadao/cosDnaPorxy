name: Go Multi-Platform Build

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # ❗️失败不会终止全部任务，便于你重试单个失败的平台
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64]
        include:
          - os: windows
            ext: .exe
            archive: zip
          - os: linux
            ext: ""
            archive: tar.gz
          - os: darwin
            ext: ""
            archive: tar.gz

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Go 1.19
        uses: actions/setup-go@v4
        with:
          go-version: '1.19'

      - name: Build binary
        run: |
          mkdir -p build
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o build/dnsproxy${{ matrix.ext }} main.go
          cp config.yaml build/

      - name: Package binary and config
        run: |
          cd build
          PACKAGE=dnsproxy-${{ matrix.os }}-${{ matrix.arch }}
          if [ "${{ matrix.archive }}" = "zip" ]; then
            zip ../$PACKAGE.zip dnsproxy${{ matrix.ext }} config.yaml
          else
            tar -czvf ../$PACKAGE.tar.gz dnsproxy${{ matrix.ext }} config.yaml
          fi
        shell: bash

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: dnsproxy-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            dnsproxy-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
            dnsproxy-${{ matrix.os }}-${{ matrix.arch }}.zip
          if-no-files-found: ignore
